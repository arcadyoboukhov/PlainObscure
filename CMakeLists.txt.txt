cmake_minimum_required(VERSION 3.5)

# Project name
project(LSBSteganography VERSION 1.0 LANGUAGES CXX)

# Specify C++17 standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Find the Qt libraries
find_package(Qt5 REQUIRED COMPONENTS Widgets Core Sql)

# Specify OpenSSL library paths
set(OPENSSL_ROOT_DIR "C:/msys64/mingw64") # Adjust as needed
find_package(OpenSSL REQUIRED)

# Set the source files
set(SOURCES
    src/form.cpp
    src/main.cpp
    src/mainwindow.cpp
    src/manager.cpp
    src/password.cpp
)

# Set the header files
set(HEADERS
    src/form.h
    src/mainwindow.h
    src/manager.h
    src/password.h
)

# Set the UI files
set(FORMS
    src/form.ui
    src/mainwindow.ui
    src/manager.ui
    src/password.ui
)

# Add the Qt UI files
qt5_wrap_ui(UI_HEADERS ${FORMS})

# Create the executable
add_executable(${PROJECT_NAME} ${SOURCES} ${HEADERS} ${UI_HEADERS})

# Link Qt libraries and OpenSSL
target_link_libraries(${PROJECT_NAME}
    Qt5::Widgets
    Qt5::Core
    Qt5::Sql
    OpenSSL::SSL
    OpenSSL::Crypto
)

# Include directories
target_include_directories(${PROJECT_NAME} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/include)

# Set deployment path (adjust as needed)
if(UNIX AND NOT APPLE)
    set_target_properties(${PROJECT_NAME} PROPERTIES INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")
    install(TARGETS ${PROJECT_NAME} DESTINATION bin)
endif()
